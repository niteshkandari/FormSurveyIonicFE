{"version":3,"file":"static/js/535.e00d69dc.chunk.js","mappings":"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","sources":["utils/Validate.ts","pages/CreateForm.tsx"],"sourcesContent":["export class ValidateFormData {\n  static validator(reqBody: {\n    name: string;\n    email: string;\n    address: string;\n    phoneNumber: any;\n  }) {\n      const { name,email,address, phoneNumber } = reqBody;   \n      return new Promise((resolve, reject) => {\n          if(name === \"\" && address === \"\" && address === \"\") {\n            reject({val:false,warning:\"Fields cannot be empty\"});\n        }\n        else if(name.length > 20 ){\n            reject({val:false,warning:\"Name should not exceed 20 characters\"});\n        }\n        else if(!email.includes(\"@\")) {\n            reject({val:false,warning:\"Email address is not valid\"});\n        }\n        else if(phoneNumber.toString().length < 8) {\n            reject({val:false,warning:\"Please enter a valid phone number\"})\n        }\n        else if(isNaN(phoneNumber)){\n            reject({val:false,warning:\"please enter correct phone number\"});\n        }\n        else{\n            resolve(true);\n        }\n    })\n  }\n}\n","import { useHistory, useRouteMatch } from \"react-router\";\nimport { ValidateFormData } from \"../utils/Validate\";\nimport {\n  IonButton,\n  IonContent,\n  IonPage,\n  IonLabel,\n  IonList,\n  IonItem,\n  IonInput,\n  IonActionSheet,\n  IonToast,\n  IonLoading,\n  IonToggle,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,} from \"@ionic/react\";\nimport { checkmarkDone, trash, share, heart, add } from \"ionicons/icons\";\nimport \"../css/style.css\";\nimport React,{useEffect, useState} from \"react\";\nimport { useFacade } from \"../facade/facade\";\n\nconst CreateForm: React.FC = () => {\n  const facade:any = useFacade();\n  const [name, setName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [phoneNo, setPhoneNo] = useState<string>(\"\");\n  const [showActionSheet, setShowActionSheet] = useState<boolean>(false);\n  const [showToast, setShowToast] = useState<boolean>(false);\n  const [showWarning, setShowWarning] = useState<boolean>(false);\n  const [warning, setWarning] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [toggle, setToggle] = useState<boolean>(false);\n  const match: any = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (match && match.params && match.params.id) {\n      getFormData();\n    }\n  }, [match.params.id]);\n  \n  useEffect(() => {\n    let mounted = false;\n    if (mounted) {\n      getFormData();\n    }\n    return () => {\n      mounted = true;\n    };\n  }, []);\n  \n  const resetStates = () => {\n    setName(\"\");\n    setAddress(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    setShowToast(true);\n    setLoading(false);\n  };\n\n  const handleFormData = async () => {\n    let reqBody = {\n      name: name,\n      email: email,\n      phoneNumber: +phoneNo,\n      address: address,\n      service: toggle,\n    };\n    let isValidated: boolean = false;\n    await ValidateFormData.validator(reqBody)\n      .then((result) =>\n        result === true ? (isValidated = true) : (isValidated = false)\n      )\n      .catch((err) => setWarning(err.warning));\n    if (isValidated) {\n      if (!match.params.id) {\n        setLoading(true);\n        facade.createForm(reqBody).then((response: { data: any; }) => {\n          const { data } = response;\n          if (response) {\n            resetStates();\n          }\n        })\n        .catch((error: any) => {\n          setWarning(\"something went wrong\");\n          setShowWarning(true);\n        });\n      } else {\n        setLoading(true);\n        facade.updateForm({id:match.params.id,body:reqBody}).then(() => {\n            resetStates();\n            history.replace(\"/tabs/p/createForm\");\n          })\n          .catch((error:any) => {\n            console.error(error);\n          });\n      }\n    } else {\n      setShowWarning(true);\n    }\n    setWarning(\"\");\n  };\n\n  const handleFormDelete = () => {\n    setShowActionSheet((prev) => !prev);\n    setName(\"\");\n    setAddress(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    history.replace(\"/tabs/p/CreateForm\");\n  };\n\n  const getFormData = () => {\n    setLoading(true);\n    facade.getFormById(match.params.id).then((success: { data: any; }) => {\n      const { data } = success;\n      console.log(data, \"success\");\n      setName(data.name);\n      setAddress(data.address);\n      setEmail(data.email);\n      setPhoneNo(data.phoneNumber);\n      setLoading(false);\n    })\n    .catch((err: any) => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader className=\"ion-header\">\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Create Form</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"ion-padding loader-container\">\n        <IonToast\n          mode={\"ios\"}\n          position={\"top\"}\n          icon={checkmarkDone}\n          isOpen={showToast}\n          color={\"success\"}\n          onDidDismiss={() => setShowToast(false)}\n          message=\"Form submitted successfully !!!\"\n          duration={2000}\n        />\n        <IonToast\n          mode={\"ios\"}\n          position={\"top\"}\n          icon={checkmarkDone}\n          isOpen={showWarning}\n          color={\"danger\"}\n          onDidDismiss={() => setShowWarning(false)}\n          message={warning}\n          duration={2000}\n        />\n\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => setLoading(false)}\n          message={\"Please wait...\"}\n          duration={7000}\n        />\n        <IonList id=\"main-content\" className=\"layout\" mode=\"ios\" inset={true}>\n          {/* <IonItemDivider color=\"warning\" /> */}\n\n          <IonItem>\n            <IonLabel position=\"floating\" color=\"primary\">\n              Enter Your Name...\n            </IonLabel>\n            <IonInput\n              value={name}\n              autofocus={true}\n              color={\"danger\"}\n              required={true}\n              autoCapitalize=\"words\"\n              onIonChange={(e) => setName(e.detail.value!)}\n              clearInput\n            ></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\" color=\"primary\">\n              Enter Your Email...\n            </IonLabel>\n            <IonInput\n              value={email}\n              color={\"danger\"}\n              required={true}\n              onIonChange={(e) => setEmail(e.detail.value!)}\n              clearInput\n            ></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\" color=\"primary\">\n              Enter Your Address...\n            </IonLabel>\n            <IonInput\n              value={address}\n              color={\"danger\"}\n              required={true}\n              onIonChange={(e) => setAddress(e.detail.value!)}\n              clearInput\n            ></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\" color=\"primary\">\n              Enter Your Phone Number...\n            </IonLabel>\n            <IonInput\n              type=\"tel\"\n              value={phoneNo}\n              required={true}\n              color={\"danger\"}\n              clearInput\n              onIonChange={(e) => setPhoneNo(e.detail.value!)}\n            ></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel color=\"primary\">Continue Service</IonLabel>\n            <IonToggle\n              checked={toggle}\n              onIonChange={() => setToggle((prev) => !prev)}\n              slot=\"end\"\n              color=\"secondary\"\n            />\n          </IonItem>\n          {/* <IonItemDivider/> */}\n          <IonItem />\n        </IonList>\n\n        <IonButton\n          color=\"secondary\"\n          onClick={() => setShowActionSheet(true)}\n          expand=\"block\"\n        >\n          Action\n        </IonButton>\n        <IonActionSheet\n          isOpen={showActionSheet}\n          onDidDismiss={() => setShowActionSheet(false)}\n          cssClass=\"my-custom-class\"\n          buttons={[\n            {\n              text: \"Delete\",\n              role: \"destructive\",\n              icon: trash,\n              id: \"delete-button\",\n              data: {\n                type: \"delete\",\n              },\n              handler: handleFormDelete,\n            },\n            {\n              text: \"Share\",\n              icon: share,\n              data: 10,\n              handler: () => {\n                console.log(\"Share clicked\");\n              },\n            },\n            {\n              text: \"Add\",\n              icon: add,\n              data: \"Data value\",\n              handler: handleFormData,\n            },\n            {\n              text: \"Favorite\",\n              icon: heart,\n              handler: () => {\n                console.log(\"Favorite clicked\");\n              },\n            },\n            {\n              text: \"Cancel\",\n              role: \"cancel\",\n              handler: () => setShowActionSheet(false),\n            },\n          ]}\n        ></IonActionSheet>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CreateForm;\n{\n  /* <IonItemDivider>Readonly input</IonItemDivider> */\n}\n{\n  /* <IonItemDivider>Disabled input</IonItemDivider>\n  <IonItem>\n  <IonInput value={text} disabled></IonInput>\n  </IonItem> */\n}\n\n{\n  /* <IonItemDivider>Inputs with labels</IonItemDivider> */\n}\n{\n  /* \n  <IonItem>\n  <IonLabel position=\"fixed\">Fixed Label</IonLabel>\n  <IonInput value={text}></IonInput>\n  </IonItem>\n  \n  <IonItem>\n  <IonLabel position=\"stacked\">Stacked Label</IonLabel>\n  <IonInput value={text}> </IonInput>\n  </IonItem>\n</IonList> */\n}\n"],"names":["ValidateFormData","reqBody","name","email","address","phoneNumber","Promise","resolve","reject","val","warning","length","includes","toString","isNaN","facade","useFacade","useState","setName","setEmail","setAddress","phoneNo","setPhoneNo","showActionSheet","setShowActionSheet","showToast","setShowToast","showWarning","setShowWarning","setWarning","loading","setLoading","toggle","setToggle","match","useRouteMatch","history","useHistory","useEffect","params","id","getFormData","mounted","resetStates","handleFormData","service","isValidated","validator","then","result","catch","err","updateForm","body","replace","error","console","createForm","response","data","getFormById","success","log","className","slot","mode","position","icon","checkmarkDone","isOpen","color","onDidDismiss","message","duration","cssClass","inset","value","autofocus","required","autoCapitalize","onIonChange","e","detail","clearInput","type","checked","prev","onClick","expand","buttons","text","role","trash","handler","share","add","heart"],"sourceRoot":""}