{"version":3,"file":"static/js/677.6e09825b.chunk.js","mappings":"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","sources":["pages/Forms.tsx"],"sourcesContent":["import { useHistory } from \"react-router\";\nimport {\n  IonButton,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonLabel,\n  IonPage,\n  IonSlide,\n  IonSlides,\n  IonTitle,\n  IonToolbar,\n  IonToast,\n  IonLoading,\n  IonButtons,\n  IonMenuButton,\n} from \"@ionic/react\";\nimport { pencil, trash, sad } from \"ionicons/icons\";\nimport \"../css/style.css\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useFacade } from \"../facade/facade\";\n\nconst Forms: FC = () => {\n  const [formData, setFormData] = useState([]);\n  const [showToast, setShowToast] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const history = useHistory();\n  const facade:any = useFacade();\n\n  const slideOpts = {\n    initialSlide: 1,\n    speed: 400,\n  };\n \n   useEffect(() => {\n    let mounted = false;\n    if (!mounted) {\n      getFormData();\n    }\n    return () => {\n      mounted = true;\n    };\n  }, []);\n\n  const getFormData = () => {\n    setShowLoading(true);\n    facade.getAllForms().then((response: { data: any; }) =>{\n      const { data } = response;\n      setFormData(data.Form);\n      setShowLoading(false);\n    }) .catch((error: any) => {\n      console.error(error);\n    });\n  };\n\n  const handleDeleteEntry = (id: number) => {\n    setShowLoading(true);\n    setShowToast(true);\n    facade.deleteForm(id).then((res: any) => {\n      let filterd = formData.filter((item: any) => item._id !== id);\n      setFormData(filterd);\n      setShowLoading(false);\n      setShowToast(false);\n    }) .catch((error: any) => {\n      console.log(error);\n    });\n  };\n\n  const handleEditEntry = (id: number) => {\n    history.push({\n      pathname: `/tabs/p/CreateForm/edit/${id}`\n    });\n  };\n\n  const getTheme: any = () => {\n    let n = 0;\n    const dynamicTheme: any = {\n      0: \"secondary\",\n      1: \"primary\",\n      2: \"success\",\n      3: \"warning\",\n      4: \"danger\",\n    };\n    n = Math.floor(Math.random() * 4);\n    return dynamicTheme[n];\n  };\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>Forms</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonToast\n          mode={\"ios\"}\n          position={\"top\"}\n          icon={trash}\n          isOpen={showToast}\n          color={\"success\"}\n          onDidDismiss={() => setShowToast(false)}\n          message=\"Form submitted successfully !!!\"\n          duration={2000}\n        />\n\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={showLoading}\n          onDidDismiss={() => setShowLoading(false)}\n          message={\"Please wait...\"}\n          duration={7000}\n        />\n        {!showLoading && formData.length > 0 ? (\n          <IonSlides pager={false} options={slideOpts}>\n            {formData.map(({_id:id,name,phoneNumber,email,address,service=false}, idx: any) => (\n              <IonSlide key={id + idx}>\n                <IonCard color={getTheme()} className=\"height-full\">\n                  <IonCardHeader>\n                    <IonCardTitle>Form : {idx + 1}</IonCardTitle>\n                  </IonCardHeader>\n\n                  <IonCardContent>\n                    <div className=\"grid\">\n                      <IonLabel>\n                        <span className={\"text-box\"}>id</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>{(id+'').slice(0,14)}</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>name</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>{name}</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>email</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>{email}</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>address</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>{address}</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>phone number</span>\n                      </IonLabel>\n                      <IonLabel>\n                        <span className={\"text-box\"}>{phoneNumber}</span>\n                      </IonLabel>\n                      <IonLabel>\n                      <span className={\"text-box\"}>Service Continue</span>\n                      </IonLabel>\n                      <IonLabel>\n                      <span className={\"text-box\"}>{service ? 'yes' : 'no'}</span>\n                      </IonLabel>\n                    </div>\n                    <IonButton\n                      onClick={() => handleEditEntry(id)}\n                      fill={\"outline\"}\n                      color={\"light\"}\n                      expand=\"block\"\n                    >\n                      <IonIcon slot=\"start\" icon={pencil} />\n                      Edit\n                    </IonButton>\n                    <IonButton\n                      onClick={() => handleDeleteEntry(id)}\n                      fill={\"outline\"}\n                      color={\"light\"}\n                      expand=\"block\"\n                    >\n                      <IonIcon slot=\"start\" icon={trash} />\n                      Delete\n                    </IonButton>\n                  </IonCardContent>\n                </IonCard>\n              </IonSlide>\n            ))}\n          </IonSlides>\n        ) : (\n          <>\n            {!showLoading && (\n              <IonCard color={getTheme()} className=\"height-full\">\n                <div\n                  style={{\n                    display: \"grid\",\n                    placeItems: \"center\",\n                    width: \"100%\",\n                    height: \"100%\",\n                  }}\n                >\n                  <IonIcon\n                    style={{ fontSize: \"200px\" }}\n                    slot=\"start\"\n                    icon={sad}\n                  />\n                  <span\n                    style={{\n                      border: \"3px solid\",\n                      fontSize: \"50px\",\n                      fontWeight: \"bold\",\n                      padding: \"7px\",\n                    }}\n                  >\n                    No Data\n                  </span>\n                </div>\n              </IonCard>\n            )}\n          </>\n        )}\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Forms;\n"],"names":["useState","formData","setFormData","showToast","setShowToast","showLoading","setShowLoading","history","useHistory","facade","useFacade","useEffect","mounted","getFormData","getAllForms","then","response","data","Form","catch","error","console","getTheme","Math","floor","random","slot","fullscreen","mode","position","icon","trash","isOpen","color","onDidDismiss","message","duration","cssClass","length","pager","options","initialSlide","speed","map","idx","id","_id","name","phoneNumber","email","address","service","className","slice","onClick","push","pathname","handleEditEntry","fill","expand","pencil","deleteForm","res","filterd","filter","item","log","handleDeleteEntry","style","display","placeItems","width","height","fontSize","sad","border","fontWeight","padding"],"sourceRoot":""}